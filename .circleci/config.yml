version: 2
jobs:
  build:
    # machine: true
    machine:
      image: ubuntu-2004:202010-01
    
    steps:
      - checkout
      - run:
          name: Install Job dependencies
          command: |
            sudo apt update
            sudo apt install -y jq
            sudo apt install -y moreutils
            sudo snap install yq
            sudo snap install snapcraft --classic
            sudo snap install lxd
            sudo /snap/bin/lxd.migrate -yes
            sudo /snap/bin/lxd waitready
            sudo /snap/bin/lxd init --auto
      - run: 
          name: Version check
          command: |
            LATEST_VERSION_TAG="$(curl https://api.github.com/repos/RPCS3/rpcs3-binaries-linux/releases/latest -s | jq .tag_name -r)"
            CURRENT_VERSION_SNAP="$(snap info rpcs3-emu | grep edge | head -n 2 | tail -n 1 | awk -F ' ' '{print $2}')"
            LATEST_VERSION_COMMIT=${LATEST_VERSION_TAG#build-}
            LATEST_VERSION="$(curl https://api.github.com/repos/RPCS3/rpcs3-binaries-linux/releases/latest -s | jq .name -r)"

            # compare versions
            if [ $CURRENT_VERSION_SNAP != $LATEST_VERSION ]; then
                echo "versions don't match, github: $LATEST_VERSION snap: $CURRENT_VERSION_SNAP"
                echo "updating rpcs3 source commit"
                yq w -i snap/snapcraft.yaml parts.rpcs3.source-commit $LATEST_VERSION_COMMIT
                echo true >> build
                echo $LATEST_VERSION >> latest
                echo $LATEST_VERSION_COMMIT >> latest_commit
                echo $CURRENT_VERSION_SNAP >> current
            else
                echo "versions match, github: $LATEST_VERSION snap: $CURRENT_VERSION_SNAP"
                echo false >> build
            fi
      - run:
          name: Versions match - Cancel
          command: if [ $BUILD == false ]; then circleci-agent step halt; fi
      - run:
          name: Snap build
          command: |
            sudo snapcraft --use-lxd --enable-experimental-package-repositories
      - run:
          name: Snap Test
          command: |
            sudo snap install *.snap --dangerous
            snap run rpcs3-emu.rpcs3 --version
      - run:
          name: "Publish to Store"
          command: |
            mkdir .snapcraft
            echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
            snapcraft push *.snap --release stable



      # - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      # - run: docker build -t orgname/image:tag .
      # - run: docker push orgname/image:tag